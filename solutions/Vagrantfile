# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
  end

  ## need to copy all key.pub as authorized_keys in /root/.ssh/

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

$script = <<SCRIPT
echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC1IJHkh/2XGLE/dkSqUxLP9EkAGCqM3Hbdj8+Bab21K/wivvhoKssl4VlNRK5oKma3OC0Vwk7CQrCHGHcI9DQw12AVw4+SItn6G5oj2Gsw19PEbFZjUxkqdOM/ouSse+H7XO1dryJBdYQdmc5N5on4kQSqJwEbhqUooARV1y2jXH47YB3PMChlARiAaW21kex9rX0RLmN4DESZq3lVytF50Nf8MkB162dB2j6BPrMrEeRlZaUkVpw0eZNQRHD0/vMh6JZZYp5wQtrIzWYGkC68J93RLRz5LvdemW6NTNC4dUP3kMESreHo0YbMTDPjjakIHuEwi6kPFUx8wLcqWnBZ andro.medh4@gmail.com' >> /home/vagrant/.ssh/authorized_keys
SCRIPT

  config.vm.define :web do |web|
    # Hostname to set on the node
    web.vm.host_name="web"

    # Hostonly network interface, used for internode communication
    web.vm.network "private_network", ip: "192.168.99.101"

    web.vm.provision "shell", inline: $script

  end

  # config.vm.define :app do |app|
  #   # Hostname to set on the node
  #   app.vm.host_name="app"

  #   # Hostonly network interface, used for internode communication
  #   app.vm.network "private_network", ip: "192.168.99.102"

  #   app.vm.provision "shell", inline: $script
  # end

  config.vm.define :db do |db|
    # Hostname to set on the node
    db.vm.host_name="db"

    # Hostonly network interface, used for internode communication
    db.vm.network "private_network", ip: "192.168.99.104"

    db.vm.provision "shell", inline: $script
  end

  config.vm.define :cache do |cache|
    # Hostname to set on the node
    cache.vm.host_name="cache"

    # Hostonly network interface, used for internode communication
    cache.vm.network "private_network", ip: "192.168.99.103"

    cache.vm.provision "shell", inline: $script
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
